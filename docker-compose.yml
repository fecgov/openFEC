services:
  openfec:
    platform: linux/amd64
    build:
      context: .
    ports:
      - "5000:5000"
      - "8089:8089"
    environment:
      - SQLA_CONN=${SQLA_CONN}
      - SQLA_SAMPLE_DB_CONN=${SQLA_SAMPLE_DB_CONN}
      - SQLA_DOCKER_DB_CONN=${SQLA_DOCKER_DB_CONN}
      - SQLA_TEST_CONN=${SQLA_TEST_CONN}
      - FEC_WEB_API_KEY_PUBLIC=${FEC_WEB_API_KEY_PUBLIC}
      - FEC_DOWNLOAD_API_KEY=${FEC_DOWNLOAD_API_KEY}
      - IS_USING_DOCKER=true
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_APP=webservices.rest.py
    volumes:
      - .:/app

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: localdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    platform: linux/amd64
    environment:
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With, Content-Type, Content-Length, Authorization
      - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE
      - discovery.type=single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

volumes:
  pgdata:
  esdata:
